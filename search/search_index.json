{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"ISCC - Software Development Kit","text":"<p><code>iscc-sdk</code> is a Python development kit for creating and managing ISCC (International Standard Content Code)</p>"},{"location":"#what-is-an-iscc","title":"What is an ISCC","text":"<p>The ISCC is a similarity preserving identifier for digital media assets.</p> <p>ISCCs are generated algorithmically from digital content, just like cryptographic hashes. However, instead of using a single cryptographic hash function to identify data only, the ISCC uses various algorithms to create a composite identifier that exhibits similarity-preserving properties (soft hash).</p> <p>The component-based structure of the ISCC identifies content at multiple levels of abstraction. Each component is self-describing, modular, and can be used separately or with others to aid in various content identification tasks. The algorithmic design supports content deduplication, database synchronization, indexing, integrity verification, timestamping, versioning, data provenance, similarity clustering, anomaly detection, usage tracking, allocation of royalties, fact-checking and general digital asset management use-cases.</p>"},{"location":"#what-is-iscc-sdk","title":"What is <code>iscc-sdk</code>","text":"<p><code>iscc-sdk</code> is built on top of <code>iscc-core</code> and adds high level features for generating and handling ISCC codes for all the different mediatypes:</p> <ul> <li>mediatype detection</li> <li>metadata extraction and embedding</li> <li>mediatype specific content extraction and pre-processing</li> <li>iscc indexing and search</li> </ul>"},{"location":"#requirements","title":"Requirements","text":"<p>Python 3.8 to 3.11 on 64-bit systems</p>"},{"location":"#installation","title":"Installation","text":"<p>Use the Python package manager pip to install <code>iscc-sdk</code>.</p> <pre><code>pip install iscc-sdk\n</code></pre>"},{"location":"#getting-started","title":"Getting Started","text":"<p>Create an ISCC-CODE for a media file:</p> <pre><code>import iscc_sdk as idk\nprint(idk.code_iscc(\"/path/to/mediafile.jpg\"))\n</code></pre> <p>Using the CLI tool to create an ISCC-CODE</p> <pre><code>idk create /path/to/mediafile.jpg\n</code></pre> <p>Batch creation of ISCC-CODEs</p> <pre><code>idk batch /folder_with_media_files\n</code></pre>"},{"location":"#documentation","title":"Documentation","text":"<p>https://sdk.iscc.codes</p>"},{"location":"#troubleshooting","title":"Troubleshooting","text":"<p>On Linux and MacOS you might need to install taglib as a prerequisite. On Ubuntu, Mint and other Debian-Based distributions do:</p> <pre><code>sudo apt install libtag1-dev\n</code></pre> <p>On a Mac, use HomeBrew:</p> <pre><code>brew install taglib\n</code></pre>"},{"location":"#project-status","title":"Project Status","text":"<p>The ISCC has been accepted by ISO as full work item ISO/AWI 24138 - International Standard Content Code and is currently being standardized at TC 46/SC 9/WG 18. https://www.iso.org/standard/77899.html</p> <p>Attention</p> <p>The <code>iscc-sdk</code> library and the accompanying documentation is under development. API changes and other backward incompatible changes are to be expected until the upcoming v1.5 stable release.</p>"},{"location":"#maintainers","title":"Maintainers","text":"<p>@titusz</p>"},{"location":"#contributing","title":"Contributing","text":"<p>Pull requests are welcome. For significant changes, please open an issue first to discuss your plans. Please make sure to update tests as appropriate.</p> <p>You may also want join our developer chat on Telegram at https://t.me/iscc_dev.</p>"},{"location":"audio/","title":"ISCC - Audio Processing","text":"<p>Audio handling module.</p>"},{"location":"audio/#iscc_sdk.audio.audio_thumbnail","title":"<code>audio_thumbnail(fp)</code>","text":"<p>Create a thumbnail from embedded cover art.</p> <p>Parameters:</p> Name Type Description Default <code>fp</code> <code>str</code> <p>Filepath to audio file.</p> required <p>Returns:</p> Type Description <code>Image.Image|None</code> <p>Thumbnail image as PIL Image object</p>"},{"location":"audio/#iscc_sdk.audio.audio_meta_extract","title":"<code>audio_meta_extract(fp)</code>","text":"<p>Extract metadata from audio file.</p> <p>Parameters:</p> Name Type Description Default <code>fp</code> <code>str</code> <p>Filepath to audio file.</p> required <p>Returns:</p> Type Description <code>dict</code> <p>Metadata mapped to IsccMeta schema</p>"},{"location":"audio/#iscc_sdk.audio.audio_meta_embed","title":"<code>audio_meta_embed(fp, meta)</code>","text":"<p>Embed metadata into a copy of the audio file.</p> <p>Parameters:</p> Name Type Description Default <code>fp</code> <code>str</code> <p>Filepath to source audio file</p> required <code>meta</code> <code>IsccMeta</code> <p>Metadata to embed into audio file</p> required <p>Returns:</p> Type Description <code>str</code> <p>Filepath to new audio file with updated metadata</p>"},{"location":"audio/#iscc_sdk.audio.audio_features_extract","title":"<code>audio_features_extract(fp)</code>","text":"<p>Exctracts chromprint fingerprint.</p> <p>Parameters:</p> Name Type Description Default <code>fp</code> <code>str</code> <p>Filepath</p> required <p>Returns:</p> Type Description <code>dict</code> <p>A dict with <code>duration</code> in seconds and <code>fingerprint</code> 32-bit integers</p>"},{"location":"changelog/","title":"Changelog","text":""},{"location":"changelog/#changelog","title":"Changelog","text":""},{"location":"changelog/#057-2023-06-21","title":"0.5.7 - 2023-06-21","text":"<ul> <li>Added parallel processing of ISCC-UNITs</li> <li>Handle video thumbnail extraction errors gracefully</li> <li>Add basic command line interface for batch processing</li> <li>Add option to keep MP7 Video Signature</li> <li>Support concurrent audio metadata extraction</li> <li>Updated dependencies</li> <li>Fixed mkdocstrings</li> </ul>"},{"location":"changelog/#056-2023-04-28","title":"0.5.6 - 2023-04-28","text":"<ul> <li>Don\u00b4t install tika more than once per session</li> <li>Don\u00b4t pin poetry build requirement version</li> <li>Publish wheels</li> <li>Use latest poetry with default settings in CI</li> <li>Update dependencies</li> </ul>"},{"location":"changelog/#055-2023-03-26","title":"0.5.5 - 2023-03-26","text":"<ul> <li>Switch to official pytaglib distribution</li> <li>Update dependencies</li> </ul>"},{"location":"changelog/#054-2023-03-15","title":"0.5.4 - 2023-03-15","text":"<ul> <li>Added global <code>extract_metadata</code> option</li> <li>Removed taglib installation from CI</li> </ul>"},{"location":"changelog/#053-2023-03-12","title":"0.5.3 - 2023-03-12","text":"<ul> <li>Update to iscc-core 1.0.3 using binary wheels</li> </ul>"},{"location":"changelog/#052-2023-03-11","title":"0.5.2 - 2023-03-11","text":"<ul> <li>Added Python 3.11 support</li> <li>Added WavPack support</li> <li>Added docx metadata embedding support</li> <li>Improved error messages for unsupported mediatypes</li> <li>Improved robustness of audio metadata extraction</li> <li>Normalize mediatype application/xml to text/xml</li> <li>Nomralize mediatype application/vnd.ms-asf video/x-ms-asf</li> <li>Normalize mediatype application/vnd.adobe.flash.movie to application/x-shockwave-flash</li> <li>Add docx and xlsx extensions to mediatypes</li> <li>Updated to iscc-core 1.0.1</li> <li>Updated various dependencies</li> </ul>"},{"location":"changelog/#051-2022-12-09","title":"0.5.1 - 2022-12-09","text":"<ul> <li>Fix audio title embedding</li> </ul>"},{"location":"changelog/#050-2022-12-09","title":"0.5.0 - 2022-12-09","text":"<ul> <li>Add audio cover art thumbnailing</li> <li>Integrate EPUB metadata embedding</li> </ul>"},{"location":"changelog/#049-2022-12-09","title":"0.4.9 - 2022-12-09","text":"<ul> <li>Add EPUB cover image thumbnail extraction</li> <li>Add EPUB metadata embedding</li> <li>Retain existing PDF DocInfo metadata when embedding</li> </ul>"},{"location":"changelog/#048-2022-12-09","title":"0.4.8 - 2022-12-09","text":"<ul> <li>Separeta ISCC_CORE and ISCC_SDK options</li> <li>Document ISCC_SDK option</li> <li>Integrate PDF thumbnail extraction</li> </ul>"},{"location":"changelog/#047-2022-12-08","title":"0.4.7 - 2022-12-08","text":"<ul> <li>Add metadata embedding support for PDFs</li> <li>Add thumbnail support for PDFs</li> <li>Improve text metadata extraction mapping</li> <li>Improve documentation</li> <li>Update dependencies</li> </ul>"},{"location":"changelog/#046-2022-11-24","title":"0.4.6 - 2022-11-24","text":"<ul> <li>Add support for earlier Pillow versions</li> <li>Add option to configure <code>image_max_pixels</code></li> <li>Don\u00b4t embed empty titles in images</li> <li>Handle extracted metadata gracefully</li> <li>Fixed CVE-2007-4559</li> <li>Update to iscc-schema v0.4.0</li> <li>Update to iscc-core v0.2.12</li> <li>Update to tika 2.6.0</li> <li>Update dependencies</li> </ul>"},{"location":"changelog/#045-2022-07-04","title":"0.4.5 - 2022-07-04","text":"<ul> <li>Update to iscc-schema v0.3.9</li> <li>Update to iscc-core v0.2.11</li> <li>Fix issue with embedded identifiers</li> <li>Add support for granular text features</li> </ul>"},{"location":"changelog/#044-2022-06-08","title":"0.4.4 - 2022-06-08","text":"<ul> <li>Update to iscc-schema v0.3.8</li> <li>Updated dependencies</li> </ul>"},{"location":"changelog/#043-2022-05-08","title":"0.4.3 - 2022-05-08","text":"<ul> <li>Moved changelog to seperate file</li> <li>Fixed pillow resampling deprecation warning</li> <li>Fixed exiv2 error on older linux versions</li> <li>Added support for lazy installation of cli-tools</li> <li>Added cleanup of cli-tool archives after installation</li> <li>Removed obsolete ffprobe tool</li> <li>Updated dependencies</li> </ul>"},{"location":"changelog/#042-2022-04-27","title":"0.4.2 - 2022-04-27","text":"<ul> <li>Fix metadata extraction failure with long texts</li> <li>Embed Dublin Core metadata in images</li> <li>Support path object inputs for text_name_from_uri</li> </ul>"},{"location":"changelog/#041-2022-03-26","title":"0.4.1 - 2022-03-26","text":"<ul> <li>Added video thumbnail support</li> <li>Added support for IPFS wrap-with-directory</li> </ul>"},{"location":"changelog/#040-2022-03-21","title":"0.4.0 - 2022-03-21","text":"<ul> <li>Added Text-Code generation</li> <li>Added Video-Code generation</li> <li>Added text document metadata extraction</li> <li>Added video metadata embedding and extraction</li> <li>Added custom exeptions</li> <li>Changed embedding to create a new mediafile</li> <li>Set filename on IsccMeta</li> <li>Set @type on IsccMeta</li> </ul>"},{"location":"changelog/#030-2022-03-12","title":"0.3.0 - 2022-03-12","text":"<ul> <li>Added support for Audio-Code with metadata embedding/extraction</li> </ul>"},{"location":"changelog/#020-2022-03-10","title":"0.2.0 - 2022-03-10","text":"<ul> <li>Added IPFS support</li> </ul>"},{"location":"changelog/#010-2022-03-09","title":"0.1.0 - 2022-03-09","text":"<ul> <li>Initial release with support for ISCC Content-Code Image</li> </ul>"},{"location":"image/","title":"ISCC - Image Processing","text":"<p>Image handling module.</p>"},{"location":"image/#iscc_sdk.image.image_normalize","title":"<code>image_normalize(img)</code>","text":"<p>Normalize image for hash calculation.</p> <p>Parameters:</p> Name Type Description Default <code>img</code> <code>Image.Image</code> <p>Pillow Image Object</p> required <p>Returns:</p> Type Description <code>Sequence[int]</code> <p>Normalized and flattened image as 1024-pixel array (from 32x32 gray pixels)</p>"},{"location":"image/#iscc_sdk.image.image_exif_transpose","title":"<code>image_exif_transpose(img)</code>","text":"<p>Transpose image according to EXIF Orientation tag</p> <p>Parameters:</p> Name Type Description Default <code>img</code> <code>Image.Image</code> <p>Pillow Image Object</p> required <p>Returns:</p> Type Description <code>Image.Image</code> <p>EXIF transposed image</p>"},{"location":"image/#iscc_sdk.image.image_fill_transparency","title":"<code>image_fill_transparency(img)</code>","text":"<p>Add white background to image if it has alpha transparency.</p> <p>Parameters:</p> Name Type Description Default <code>img</code> <code>Image.Image</code> <p>Pillow Image Object</p> required <p>Returns:</p> Type Description <code>Image.Image</code> <p>Image with transparency replaced by white background</p>"},{"location":"image/#iscc_sdk.image.image_trim_border","title":"<code>image_trim_border(img)</code>","text":"<p>Trim uniform colored (empty) border.</p> <p>Takes the upper left pixel as reference for border color.</p> <p>Parameters:</p> Name Type Description Default <code>img</code> <code>Image.Image</code> <p>Pillow Image Object</p> required <p>Returns:</p> Type Description <code>Image.Image</code> <p>Image with uniform colored (empty) border removed.</p>"},{"location":"image/#iscc_sdk.image.image_meta_extract","title":"<code>image_meta_extract(fp)</code>","text":"<p>Extract metadata from image.</p> <p>Parameters:</p> Name Type Description Default <code>fp</code> <code>str</code> <p>Filepath to image file.</p> required <p>Returns:</p> Type Description <code>dict</code> <p>Metadata mapped to IsccMeta schema</p>"},{"location":"image/#iscc_sdk.image.image_meta_embed","title":"<code>image_meta_embed(fp, meta)</code>","text":"<p>Embed metadata into a copy of the image file.</p> <p>Parameters:</p> Name Type Description Default <code>fp</code> <code>str</code> <p>Filepath to source image file</p> required <code>meta</code> <code>IsccMeta</code> <p>Metadata to embed into image</p> required <p>Returns:</p> Type Description <code>str</code> <p>Filepath to the new image file with updated metadata</p>"},{"location":"image/#iscc_sdk.image.image_meta_delete","title":"<code>image_meta_delete(fp)</code>","text":"<p>Delete all metadata from image.</p> <p>Parameters:</p> Name Type Description Default <code>fp</code> <code>str</code> <p>Filepath to image file.</p> required"},{"location":"image/#iscc_sdk.image.image_thumbnail","title":"<code>image_thumbnail(fp)</code>","text":"<p>Create a thumbnail for an image.</p> <p>Parameters:</p> Name Type Description Default <code>fp</code> <code>str</code> <p>Filepath to image file.</p> required <p>Returns:</p> Type Description <code>Image.Image</code> <p>Thumbnail image as PIL Image object</p>"},{"location":"image/#iscc_sdk.image.image_to_data_url","title":"<code>image_to_data_url(img)</code>","text":"<p>Convert PIL Image object to WebP Data-URL.</p> <p>Parameters:</p> Name Type Description Default <code>img</code> <code>Image.Image</code> <p>PIL Image object to encode as WebP Data-URL.</p> required <p>Returns:</p> Type Description <code>str</code> <p>Data-URL string</p>"},{"location":"main/","title":"ISCC - Main High-Level Functions","text":"<p>SDK main top-level functions.</p>"},{"location":"main/#iscc_sdk.main.code_iscc","title":"<code>code_iscc(fp)</code>","text":"<p>Generate ISCC-CODE.</p> <p>The ISCC-CODE is a composite of Meta, Content, Data and Instance Codes.</p> <p>Parameters:</p> Name Type Description Default <code>fp</code> <code>str</code> <p>Filepath used for ISCC-CODE creation.</p> required <p>Returns:</p> Type Description <code>IsccMeta</code> <p>ISCC metadata including ISCC-CODE and merged metadata from ISCC-UNITs.</p>"},{"location":"main/#iscc_sdk.main.code_meta","title":"<code>code_meta(fp)</code>","text":"<p>Generate Meta-Code from digital asset.</p> <p>Parameters:</p> Name Type Description Default <code>fp</code> <code>str</code> <p>Filepath used for Meta-Code creation.</p> required <p>Returns:</p> Type Description <code>IsccMeta</code> <p>ISCC metadata including Meta-Code and extracted metadata fields.</p>"},{"location":"main/#iscc_sdk.main.code_content","title":"<code>code_content(fp)</code>","text":"<p>Detect mediatype and create corresponding Content-Code.</p> <p>Parameters:</p> Name Type Description Default <code>fp</code> <code>str</code> <p>Filepath</p> required <p>Returns:</p> Type Description <code>IsccMeta</code> <p>Content-Code wrapped in ISCC metadata.</p>"},{"location":"main/#iscc_sdk.main.code_text","title":"<code>code_text(fp)</code>","text":"<p>Generate Content-Code Text.</p> <p>Parameters:</p> Name Type Description Default <code>fp</code> <code>str</code> <p>Filepath used for Text-Code creation.</p> required <p>Returns:</p> Type Description <code>IsccMeta</code> <p>ISCC metadata including Text-Code.</p>"},{"location":"main/#iscc_sdk.main.code_image","title":"<code>code_image(fp)</code>","text":"<p>Generate Content-Code Image.</p> <p>Parameters:</p> Name Type Description Default <code>fp</code> <code>str</code> <p>Filepath used for Image-Code creation.</p> required <p>Returns:</p> Type Description <code>IsccMeta</code> <p>ISCC metadata including Image-Code.</p>"},{"location":"main/#iscc_sdk.main.code_audio","title":"<code>code_audio(fp)</code>","text":"<p>Generate Content-Code Audio.</p> <p>Parameters:</p> Name Type Description Default <code>fp</code> <code>str</code> <p>Filepath used for Audio-Code creation.</p> required <p>Returns:</p> Type Description <code>IsccMeta</code> <p>ISCC metadata including Audio-Code.</p>"},{"location":"main/#iscc_sdk.main.code_video","title":"<code>code_video(fp)</code>","text":"<p>Generate Content-Code Video.</p> <p>Parameters:</p> Name Type Description Default <code>fp</code> <code>str</code> <p>Filepath used for Video-Code creation.</p> required <p>Returns:</p> Type Description <code>IsccMeta</code> <p>ISCC metadata including Image-Code.</p>"},{"location":"main/#iscc_sdk.main.code_data","title":"<code>code_data(fp)</code>","text":"<p>Create ISCC Data-Code.</p> <p>The Data-Code is a similarity preserving hash of the input data.</p> <p>Parameters:</p> Name Type Description Default <code>fp</code> <code>str</code> <p>Filepath used for Data-Code creation.</p> required <p>Returns:</p> Type Description <code>IsccMeta</code> <p>ISCC metadata including Data-Code.</p>"},{"location":"main/#iscc_sdk.main.code_instance","title":"<code>code_instance(fp)</code>","text":"<p>Create ISCC Instance-Code.</p> <p>The Instance-Code is prefix of a cryptographic hash (blake3) of the input data. It\u00b4s purpose is to serve as a checksum that detects even minimal changes to the data of the referenced media asset. For cryptographicaly secure integrity checking a full 256-bit multihash is provided with the <code>datahash</code> field.</p> <p>Parameters:</p> Name Type Description Default <code>fp</code> <code>str</code> <p>Filepath used for Instance-Code creation.</p> required <p>Returns:</p> Type Description <code>IsccMeta</code> <p>ISCC metadata including Instance-Code, datahash and filesize.</p>"},{"location":"mediatype/","title":"ISCC - Mediatype Detection","text":"<p>Detect and map RFC6838 mediatypes to ISCC processing modes.</p>"},{"location":"mediatype/#iscc_sdk.mediatype.mediatype_and_mode","title":"<code>mediatype_and_mode(fp)</code>","text":"<p>Detect mediatype and processing mode for a file.</p> <p>Example</p> <pre><code>&gt;&gt;&gt; import iscc_sdk\n&gt;&gt;&gt; iscc_sdk.mediatype_and_mode('some.pdf')\n('application/pdf', 'text')\n</code></pre> <p>Parameters:</p> Name Type Description Default <code>fp</code> <code>str</code> <p>Filepath</p> required <p>Returns:</p> Type Description <code>tuple[str, str]</code> <p>A tuple of <code>mediatype</code> and <code>mode</code></p>"},{"location":"mediatype/#iscc_sdk.mediatype.mediatype_guess","title":"<code>mediatype_guess(data, file_name = None)</code>","text":"<p>Guess mediatype from raw data or filename.</p> <p>First try to guess by file extension. If that fails we match by content sniffing.</p> <p>Example</p> <pre><code>&gt;&gt;&gt; import iscc_sdk\n&gt;&gt;&gt; iscc_sdk.mediatype_guess(b'GIF89a')\n'image/gif'\n</code></pre> <p>Parameters:</p> Name Type Description Default <code>data</code> <code>bytes</code> <p>Raw file data (first 4096 bytes recommended)</p> required <code>file_name</code> <code>Optional[str]</code> <p>Filename for guessing based on file extension</p> <code>None</code> <p>Returns:</p> Type Description <code>str</code> <p>Media type sting</p>"},{"location":"mediatype/#iscc_sdk.mediatype.mediatype_normalize","title":"<code>mediatype_normalize(mime)</code>","text":"<p>Normalize mediatype string.</p> <p>Example</p> <pre><code>&gt;&gt;&gt; import iscc_sdk\n&gt;&gt;&gt; iscc_sdk.mediatype_normalize(\"audio/x-aiff\")\n'\"audio/aiff\"'\n</code></pre> <p>Parameters:</p> Name Type Description Default <code>mime</code> <code>str</code> <p>Mediatype sting</p> required <p>Returns:</p> Type Description <code>str</code> <p>Normalized mediatype string</p>"},{"location":"mediatype/#iscc_sdk.mediatype.mediatype_supported","title":"<code>mediatype_supported(mime)</code>","text":"<p>Check if mediatype is supported.</p> <p>Parameters:</p> Name Type Description Default <code>mime</code> <code>str</code> <p>Mediatype sting</p> required <p>Returns:</p> Type Description <code>bool</code> <p>True if mediatype is supported</p>"},{"location":"mediatype/#iscc_sdk.mediatype.mediatype_from_name","title":"<code>mediatype_from_name(name)</code>","text":"<p>Guess mediatype from filename or URL.</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>Filename or URL</p> required <p>Returns:</p> Type Description <code>str</code> <p>Mediatype string</p>"},{"location":"mediatype/#iscc_sdk.mediatype.mediatype_from_data","title":"<code>mediatype_from_data(data)</code>","text":"<p>Guess mediatype by sniffing raw header data.</p> <p>Parameters:</p> Name Type Description Default <code>data</code> <code>bytes</code> <p>Raw fileheader data (first 4096 bytes recommended)</p> required <p>Returns:</p> Type Description <code>str</code> <p>Mediatype string</p>"},{"location":"mediatype/#iscc_sdk.mediatype.mediatype_clean","title":"<code>mediatype_clean(mime)</code>","text":"<p>Clean mediatype/content-type string or first entry of a list of mimetype strings.</p> <p>Also removes semicolon separated encoding information.</p> <p>Parameters:</p> Name Type Description Default <code>mime</code> <code>str|List</code> <p>Mediatype or list of mediatypes</p> required <p>Returns:</p> Type Description <code>str</code> <p>Mediatype string</p>"},{"location":"mediatype/#iscc_sdk.mediatype.mediatype_to_mode","title":"<code>mediatype_to_mode(mime_type)</code>","text":"<p>Get perceptual processing mode from mimetype.</p> <p>Parameters:</p> Name Type Description Default <code>mime_type</code> <code>str</code> <p>RFC-6838 mediatype string</p> required <p>Returns:</p> Type Description <p>Processing mode (\"text\", \"image\", \"audio\", \"video\")</p> <p>Raises:</p> Type Description <code>ValueError</code> <p>if no matching processing mode was found.</p>"},{"location":"metadata/","title":"ISCC - Metadata Handling","text":"<p>Metadata handling functions</p>"},{"location":"metadata/#iscc_sdk.metadata.extract_metadata","title":"<code>extract_metadata(fp)</code>","text":"<p>Extract metadata from file.</p> <p>Parameters:</p> Name Type Description Default <code>fp</code> <code>str</code> <p>Filepath to media file.</p> required <p>Returns:</p> Type Description <code>IsccMeta</code> <p>Metadata mapped to IsccMeta schema</p>"},{"location":"metadata/#iscc_sdk.metadata.embed_metadata","title":"<code>embed_metadata(fp, meta)</code>","text":"<p>Embed metadata into a copy of the media file and return path to updated file.</p> <p>Parameters:</p> Name Type Description Default <code>fp</code> <code>str</code> <p>Filepath to source media file</p> required <code>meta</code> <code>IsccMeta</code> <p>Metadata to embed into media file</p> required <p>Returns:</p> Type Description <code>str|None</code> <p>Filepath to the new media file with embedded metadata (None if no embedding supported)</p>"},{"location":"metadata/#iscc_sdk.metadata.IsccMeta","title":"<code>IsccMeta</code>","text":"<p>Custom IsccMeta with text trimming support</p>"},{"location":"options/","title":"ISCC - Configuration Options","text":"<p>SDK options can be configured using environment variables. Variables are defined as class-atributes on the <code>SdkOptions</code> instance.</p> <p>Example how to access configuration options</p> <pre><code>import iscc_sdk as idk\n# To access ISCC_SDK_VIDEO_FPS setting use\nfps: int = idk.sdk_opts.video_fps\n# Configuration of the `iscc-core` dependency is also available\n# To access ISCC_CORE_IMAGE_BITS use\nimage_bits: int = idk.core_opts.image_bits\n</code></pre>"},{"location":"options/#iscc_sdk.options.SdkOptions","title":"SdkOptions","text":"<p>SDK Configuration Options</p>"},{"location":"options/#iscc_sdk.options.SdkOptions.granular","title":"granular  <code>instance-attribute</code> <code>class-attribute</code>","text":"<pre><code>granular: bool = Field(\nFalse,\ndescription=\"ISCC_SDK_GRANULAR - Generate additional granular fingerprints for ISCC-CODES\",\n)\n</code></pre>"},{"location":"options/#iscc_sdk.options.SdkOptions.extract_metadata","title":"extract_metadata  <code>instance-attribute</code> <code>class-attribute</code>","text":"<pre><code>extract_metadata: bool = Field(\nTrue,\ndescription=\"ISCC_EXTRACT_METADATA - Extract metadata from digital assets (defaut: True)\",\n)\n</code></pre>"},{"location":"options/#iscc_sdk.options.SdkOptions.image_exif_transpose","title":"image_exif_transpose  <code>instance-attribute</code> <code>class-attribute</code>","text":"<pre><code>image_exif_transpose: bool = Field(\nTrue,\ndescription=\"ISCC_SDK_IMAGE_EXIF_TRANSPOSE - Transpose image according to EXIF Orientation tag\",\n)\n</code></pre>"},{"location":"options/#iscc_sdk.options.SdkOptions.image_fill_transparency","title":"image_fill_transparency  <code>instance-attribute</code> <code>class-attribute</code>","text":"<pre><code>image_fill_transparency: bool = Field(\nTrue,\ndescription=\"ISCC_SDK_IMAGE_FILL_TRANSPARENCY - Add white background to image if it has alpha transparency\",\n)\n</code></pre>"},{"location":"options/#iscc_sdk.options.SdkOptions.image_trim_border","title":"image_trim_border  <code>instance-attribute</code> <code>class-attribute</code>","text":"<pre><code>image_trim_border: bool = Field(\nTrue,\ndescription=\"ISCC_SDK_IMAGE_TRIM_BORDER - Crop empty borders of images\",\n)\n</code></pre>"},{"location":"options/#iscc_sdk.options.SdkOptions.image_thumbnail_size","title":"image_thumbnail_size  <code>instance-attribute</code> <code>class-attribute</code>","text":"<pre><code>image_thumbnail_size: int = Field(\n128,\ndescription=\"ISCC_SDK_IMAGE_THUMBNAIL_SIZE - Size of larger side of thumbnail in number of pixels\",\n)\n</code></pre>"},{"location":"options/#iscc_sdk.options.SdkOptions.image_thumbnail_quality","title":"image_thumbnail_quality  <code>instance-attribute</code> <code>class-attribute</code>","text":"<pre><code>image_thumbnail_quality: int = Field(\n60,\ndescription=\"ISCC_SDK_IMAGE_THUMBNAIL_QUALITY - Thumbnail image compression setting (0-100)\",\n)\n</code></pre>"},{"location":"options/#iscc_sdk.options.SdkOptions.image_max_pixels","title":"image_max_pixels  <code>instance-attribute</code> <code>class-attribute</code>","text":"<pre><code>image_max_pixels: Optional[int] = Field(\n128000000,\ndescription=\"ISCC_SDK_IMAGE_MAX_PIXELS - Maximum number of pixels allowed for processing (default 128Mpx / 0.5GB RGB)\",\n)\n</code></pre>"},{"location":"options/#iscc_sdk.options.SdkOptions.text_avg_chunk_size","title":"text_avg_chunk_size  <code>instance-attribute</code> <code>class-attribute</code>","text":"<pre><code>text_avg_chunk_size: int = Field(\n1024,\ndescription=\"ISCC_SDK_TEXT_AVG_CHUNK_SIZE - Avg number of characters per text chunk for granular fingerprints\",\n)\n</code></pre>"},{"location":"options/#iscc_sdk.options.SdkOptions.video_fps","title":"video_fps  <code>instance-attribute</code> <code>class-attribute</code>","text":"<pre><code>video_fps: int = Field(\n5,\ndescription=\"ISCC_SDK_VIDEO_FPS - Frames per second to process for video hash (ignored when 0).\",\n)\n</code></pre>"},{"location":"options/#iscc_sdk.options.SdkOptions.video_store_mp7sig","title":"video_store_mp7sig  <code>instance-attribute</code> <code>class-attribute</code>","text":"<pre><code>video_store_mp7sig: bool = Field(\nFalse,\ndescription=\"ISCC_SDK_VIDEO_STORE_MP7SIG - Store extracted MP7 Video as &lt;videofile&gt;.iscc.mp7sig\",\n)\n</code></pre>"},{"location":"options/#iscc_sdk.options.sdk_opts","title":"sdk_opts  <code>module-attribute</code>","text":"<pre><code>sdk_opts = SdkOptions()\n</code></pre>"},{"location":"options/#iscc_sdk.options.core_opts","title":"core_opts  <code>module-attribute</code>","text":"<pre><code>core_opts = iscc_core.core_opts\n</code></pre>"},{"location":"text/","title":"ISCC - Text Processing","text":"<p>Text handling functions.</p>"},{"location":"text/#iscc_sdk.text.text_meta_extract","title":"<code>text_meta_extract(fp)</code>","text":"<p>Extract metadata from text document file.</p> <p>Parameters:</p> Name Type Description Default <code>fp</code> <code>str</code> <p>Filepath to text document file.</p> required <p>Returns:</p> Type Description <code>dict</code> <p>Metadata mapped to IsccMeta schema</p>"},{"location":"text/#iscc_sdk.text.text_meta_embed","title":"<code>text_meta_embed(fp, meta)</code>","text":"<p>Embed metadata into a copy of the text document.</p> <p>Parameters:</p> Name Type Description Default <code>fp</code> <code>str</code> <p>Filepath to source text document file</p> required <code>meta</code> <code>IsccMeta</code> <p>Metadata to embed into text document</p> required <p>Returns:</p> Type Description <code>str|None</code> <p>Filepath to the new file with updated metadata (None if no embedding supported)</p>"},{"location":"text/#iscc_sdk.text.text_extract","title":"<code>text_extract(fp)</code>","text":"<p>Extract plaintext from a text document.</p> <p>Parameters:</p> Name Type Description Default <code>fp</code> <code>st</code> <p>Filepath to text document file.</p> required <p>Returns:</p> Type Description <code>str</code> <p>Extracted plaintext</p>"},{"location":"text/#iscc_sdk.text.text_features","title":"<code>text_features(text)</code>","text":"<p>Create granular fingerprint for text (minhashes over ngrams from cdc-chunks). Text should be normalized before extracting text features.</p> <p>Parameters:</p> Name Type Description Default <code>text</code> <code>str</code> <p>Normalized plaintext.</p> required <p>Returns:</p> Type Description <p>Dictionary with 'sizes' and 'features'.</p>"},{"location":"text/#iscc_sdk.text.text_chunks","title":"<code>text_chunks(text, avg_size = idk.sdk_opts.text_avg_chunk_size)</code>","text":"<p>Generates variable sized text chunks (without leading BOM)</p> <p>Parameters:</p> Name Type Description Default <code>text</code> <p>normalized plaintext</p> required <code>avg_size</code> <p>Targeted average size of text chunks in bytes.</p> <code>idk.sdk_opts.text_avg_chunk_size</code>"},{"location":"text/#iscc_sdk.text.text_name_from_uri","title":"<code>text_name_from_uri(uri)</code>","text":"<p>Extract <code>filename</code> part of an uri without file extension to be used as fallback title for an asset if no title information can be acquired.</p> <p>Parameters:</p> Name Type Description Default <code>uri</code> <code>str</code> <p>Url or file path</p> required <p>Returns:</p> Type Description <code>str</code> <p>derived name (might be an empty string)</p>"},{"location":"text/#iscc_sdk.text.text_thumbnail","title":"<code>text_thumbnail(fp)</code>","text":"<p>Create a thumbnail for a text document.</p> <p>Parameters:</p> Name Type Description Default <code>fp</code> <code>str</code> <p>Filepath to text document.</p> required <p>Returns:</p> Type Description <code>Image.Image|None</code> <p>Thumbnail image as PIL Image object</p>"},{"location":"video/","title":"ISCC - Video Processing","text":"<p>Video handling module</p>"},{"location":"video/#iscc_sdk.video.video_meta_extract","title":"<code>video_meta_extract(fp)</code>","text":"<p>Extract metadata from video.</p> <p>Parameters:</p> Name Type Description Default <code>fp</code> <code>str</code> <p>Filepath to video file</p> required <p>Returns:</p> Type Description <code>dict</code> <p>Metdata mpped to IsccMeta schema</p>"},{"location":"video/#iscc_sdk.video.video_meta_embed","title":"<code>video_meta_embed(fp, meta)</code>","text":"<p>Embed metadata into a copy of the video file.</p> <p>Supported fields: name, description, meta, creator, license, aquire</p> <p>Parameters:</p> Name Type Description Default <code>fp</code> <code>str</code> <p>Filepath to source video file</p> required <code>meta</code> <code>IsccMeta</code> <p>Metadata to embed into video</p> required <p>Returns:</p> Type Description <code>str</code> <p>Filepath to new video file with updated metadata</p>"},{"location":"video/#iscc_sdk.video.video_thumbnail","title":"<code>video_thumbnail(fp)</code>","text":"<p>Create a thumbnail for a video.</p> <p>Parameters:</p> Name Type Description Default <code>fp</code> <code>str</code> <p>Filepath to video file.</p> required <p>Returns:</p> Type Description <code>bytes</code> <p>Raw PNG byte data</p>"},{"location":"video/#iscc_sdk.video.video_features_extract","title":"<code>video_features_extract(fp)</code>","text":"<p>Extract video features.</p> <p>Parameters:</p> Name Type Description Default <code>fp</code> <code>str</code> <p>Filepath to video file.</p> required <p>Returns:</p> Type Description <code>Sequence[Tuple[int, ...]]</code> <p>A sequence of frame signatures.</p>"},{"location":"video/#iscc_sdk.video.video_mp7sig_extract","title":"<code>video_mp7sig_extract(fp)</code>","text":"<p>Extract MPEG-7 Video Signature.</p> <p>Parameters:</p> Name Type Description Default <code>fp</code> <code>str</code> <p>Filepath to video file.</p> required <p>Returns:</p> Type Description <code>bytes</code> <p>raw signature data</p>"},{"location":"other/epub/","title":"ISCC - EPUB Processing","text":"<p>EPUB handling module.</p>"},{"location":"other/epub/#iscc_sdk.epub.epub_thumbnail","title":"<code>epub_thumbnail(fp)</code>","text":"<p>Creat thumbnail from EPUB document cover image.</p> <p>Parameters:</p> Name Type Description Default <code>fp</code> <code>str</code> <p>Filepath to EPUB document.</p> required <p>Returns:</p> Type Description <code>Image.Image</code> <p>Thumbnail image as PIL Image object</p>"},{"location":"other/epub/#iscc_sdk.epub.epub_meta_embed","title":"<code>epub_meta_embed(fp, meta)</code>","text":"<p>Embed metadata into a copy of the EPUB file.</p> <p>Parameters:</p> Name Type Description Default <code>fp</code> <code>str</code> <p>Filepath to source EPUB file</p> required <code>meta</code> <code>IsccMeta</code> <p>Metadata to embed into EPUB</p> required <p>Returns:</p> Type Description <code>str</code> <p>Filepath to the new PDF file with updated metadata</p>"},{"location":"other/ipfs/","title":"ISCC - IPFS Tools","text":"<p>IPFS wrapper</p>"},{"location":"other/ipfs/#iscc_sdk.ipfs.ipfs_cidv1","title":"<code>ipfs_cidv1(fp, wrap = False)</code>","text":"<p>Create default IPFS CIDv1 for file at filepath <code>fp</code>.</p> <p>If <code>wrap</code> is True, the file will be wrapped with a directory and the filname will be appended to the directory CIDv1 with a <code>/</code>.</p> <p>Parameters:</p> Name Type Description Default <code>fp</code> <code>str</code> <p>Filepath</p> required <p>Returns:</p> Type Description <code>str</code> <p>IPFS CIDv1 of the file</p>"},{"location":"other/ipfs/#iscc_sdk.ipfs.ipfs_cidv1_base16","title":"<code>ipfs_cidv1_base16(fp)</code>","text":"<p>Create IPFS CIDv1 with base16 encoding.</p> <p>Parameters:</p> Name Type Description Default <code>fp</code> <code>str</code> <p>Filepath</p> required <p>Returns:</p> Type Description <code>str</code> <p>IPFS CIDv1 of the file in base16 (hex)</p>"},{"location":"other/pdf/","title":"ISCC - PDF Processing","text":"<p>PDF handling module.</p>"},{"location":"other/pdf/#iscc_sdk.pdf.pdf_thumbnail","title":"<code>pdf_thumbnail(fp)</code>","text":"<p>Create a thumbnail from PDF document.</p> <p>Parameters:</p> Name Type Description Default <code>fp</code> <code>str</code> <p>Filepath to PDF document.</p> required <p>Returns:</p> Type Description <code>Image.Image</code> <p>Thumbnail image as PIL Image object</p>"},{"location":"other/pdf/#iscc_sdk.pdf.pdf_meta_embed","title":"<code>pdf_meta_embed(fp, meta)</code>","text":"<p>Embed metadata into a copy of the PDF file.</p> <p>Parameters:</p> Name Type Description Default <code>fp</code> <code>str</code> <p>Filepath to source PDF file</p> required <code>meta</code> <code>IsccMeta</code> <p>Metadata to embed into PDF</p> required <p>Returns:</p> Type Description <code>str</code> <p>Filepath to the new PDF file with updated metadata</p>"},{"location":"other/tools/","title":"ISCC - Tools","text":"<p>Manage SDK binary media file handling tools.</p>"},{"location":"other/tools/#iscc_sdk.tools.install","title":"<code>install()</code>","text":"<p>Install binary tools for content extraction and metadata handling.</p>"},{"location":"other/tools/#iscc_sdk.tools.run_ffmpeg","title":"<code>run_ffmpeg(args: List[str])</code>","text":"<p>Run ffmpeg command with <code>args</code>. Install ffmpeg if not found.</p>"},{"location":"other/tools/#iscc_sdk.tools.run_fpcalc","title":"<code>run_fpcalc(args: List[str])</code>","text":"<p>Run fpcalc command with <code>args</code>. Installs fpcalc if not found.</p>"},{"location":"other/tools/#iscc_sdk.tools.run_exiv2","title":"<code>run_exiv2(args: List[str])</code>","text":"<p>Run exiv2 command with <code>args</code>. Install exiv2 if not found.</p>"},{"location":"other/tools/#iscc_sdk.tools.run_exiv2json","title":"<code>run_exiv2json(args: List[str])</code>","text":"<p>Run exiv2json command with <code>args</code>. Install exiv2json if not found.</p>"},{"location":"other/tools/#iscc_sdk.tools.run_ipfs","title":"<code>run_ipfs(args: List[str])</code>","text":"<p>Run ipfs command with <code>args</code>. Install ipfs if not found.</p>"},{"location":"other/tools/#iscc_sdk.tools.run_tika","title":"<code>run_tika(args: List[str])</code>","text":"<p>Run tika command with <code>args</code>. Install tika if not found.</p>"}]}